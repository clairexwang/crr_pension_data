library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(stringr)
occ2010 <- read.csv("D:\Users\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\Documents\\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\Users\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  FALSE)
as.vector(occ2010)
occ2010 <- as.vector(occ2010)
occ <- as.vector(occ2010)
View(occ)
occ <- as.vector(occ2010$V1)
?sequence()
?seq()
num1 <- seq(1, length(veryshort), 3)
veryshort <- subset(occ[1,54])
is.vector(occ)
veryshort <- subset(occ[1,54])
veryshort <- occ[1,54]
veryshort <- occ[1:54]
num1 <- seq(1, length(veryshort), 3)
veryshort <- occ[1:54]
short <- occ[55:167]
long <- occ[168:length(occ)]
num1 <- veryshort[seq(1, length(veryshort), 3)]
name1 <- veryshort[seq(2, length(veryshort), 3)]
newlong <- subset(long, stri_length(long) > 3)
newshort <- subset(short, stri_length(short) > 2)
newshort <- subset(short, str_length(short) > 2)
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
name2 <- newvar[seq(2, length(newvar), 2)]
num2 <- as.numeric(newvar[seq(1, length(newvar), 2)])
num1 <- as.numeric(veryshort[seq(1, length(veryshort), 3)])
num1
num2
newshort
newlong
name2
short <- occ[55:167]
long <- occ[168:length(occ)]
newshort <- subset(short, str_length(short) > 2)
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
print(newvar)
occ2010[ which( ! occ2010$V1 %in% "IndOccDD" )]
occ2010[ which( ! occ2010$V1 %in% "IndOccDD" )]
View(occ2010)
occ2010[ which( ! occ2010$V1 %in% "IndOccDD" ),]
occ2010 <- occ2010[ which( ! occ2010$V1 %in% "IndOccDD" ),]
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  FALSE)
occ2010 <- occ2010[ which( ! occ2010$V1 %in% "IndOccDD" ),]
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  FALSE)
grepl("IndOcc", occ)
occ <- as.vector(occ2010$V1)
occ <- occ[!grepl("IndOcc", occ)]
veryshort <- occ[1:54]
num1 <- as.numeric(veryshort[seq(1, length(veryshort), 3)])
name1 <- veryshort[seq(2, length(veryshort), 3)]
num1
name1
short <- occ[55:167]
long <- occ[168:length(occ)]
newshort <- subset(short, str_length(short) > 2)
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
name2 <- newvar[seq(2, length(newvar), 2)]
num2 <- as.numeric(newvar[seq(1, length(newvar), 2)])
num2
name2
num <- c(num1, num2)
name <- c(name1, name2)
number2010 <- c(num1, num2)
name2010 <- c(name1, name2)
is.numeric(number2010)
is.string(name2010)
occlibrary <- data.frame(number2010, name2010)
View(occlibrary)
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv")
?write.csv
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv", rownames = FALSE)
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv", row.names = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\raw_occ_2010.csv", header =  FALSE)
occ <- as.vector(occ2010$V1)
occ <- occ[!grepl("IndOcc", occ)]
veryshort <- occ[1:54]
num1 <- as.numeric(veryshort[seq(1, length(veryshort), 3)])
name1 <- veryshort[seq(2, length(veryshort), 3)]
short <- occ[55:167]
newshort <- subset(short, str_length(short) > 2)
long <- occ[168:length(occ)]
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
name2 <- newvar[seq(2, length(newvar), 2)]
num2 <- as.numeric(newvar[seq(1, length(newvar), 2)])
number2010 <- c(num1, num2)
name2010 <- c(name1, name2)
occlibrary <- data.frame(number2010, name2010)
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv", row.names = FALSE)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyr)
install.packages("cellranger")
library(tidyverse)
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
# installing/loading the package:
if(!require(installr)) {
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
install.packages("installr"); require(installr)} #load / install+load installr
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
install.packages("installr")
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
source('~/GitHub/review_crr_pension_data/load.R', echo=TRUE)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse", dependencies=TRUE)
library(tidyverse)
install.packages("DBI", dependencies=TRUE)
require(DBI)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("bindrcpp")
library(tidyverse)
setwd("~/GitHub/review_crr_pension_data")
plan_rule_folder <- "D:\Users\CWang\Documents\GitHub\CRR-Pension-Model-Data"
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
for(i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(plan_rule_folder, plan_rule_list[i], sep = ''))
)}
plan_rule_folder <- "\D:\Users\CWang\Documents\GitHub\CRR-Pension-Model-Data"
plan_rule_folder <- "/D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data"
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
for(i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(plan_rule_folder, plan_rule_list[i], sep = ''))
)}
plan_rule_folder <- "/D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API"
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
for(i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(plan_rule_folder, plan_rule_list[i], sep = ''))
)}
plan_rule_folder <- "/D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API/"
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
for(i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(plan_rule_folder, plan_rule_list[i], sep = ''))
)}
plan_rule_folder <- "/D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API/"
plan_rule_list <- list.file(path = plan_rule_folder, pattern = "*.csv")
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
for(i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(plan_rule_folder, plan_rule_list[i], sep = ''))
)}
plan_rule_list
plan_rule_folder <- "/D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API/"
plan_rule_folder
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
plan_rule_list
plan_rule_list <- list.files(path = plan_rule_folder)
plan_rule_list
plan_rule_list <- list.files(path = plan_rule_folder, pattern = NULL)
plan_rule_list
list.files(R.home())
plan_rule_list
plan_rule_list <- list.files(path = "/D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API/", pattern = NULL)
plan_rule_list
plan_rule_list <- list.files(path = R.home(), pattern = NULL)
plan_rule_list
plan_rule_list <- list.files(path = R.home(), pattern = ".csv")
plan_rule_list
getwd
getwd()
plan_rule_folder <- "D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API/"
plan_rule_folder
plan_rule_folder <- "D:/Users/CWang/Documents/GitHub"
plan_rule_list <- list.files(path = plan_rule_folder, pattern = ".csv")
plan_rule_list
plan_rule_list <- list.files(path = plan_rule_folder, full = TRUE)
plan_rule_list
plan_rule_folder <- "D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data"
plan_rule_list <- list.files(path = plan_rule_folder, full = TRUE)
plan_rule_list
plan_rule_folder <- "D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API"
plan_rule_list <- list.files(path = plan_rule_folder, full = TRUE)
plan_rule_list
plan_rule_list <- list.files(path = plan_rule_folder)
plan_rule_list
plan_rule_list <- list.files(path = plan_rule_folder pattern = "*.csv")
plan_rule_list
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
plan_rule_list
all.data <- lapply(plan_rule_list, read.csv, header = TRUE)
read.csv(plan_rule_folder.PensionBenefitMin.csv)
read.csv(plan_rule_folder.PensionBenefitMin)
all.data <- lapply(plan_rule_list, read.csv, header = TRUE)
plan_rule_folder <- "D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API/"
plan_rule_list <- list.files(path = plan_rule_folder, pattern = "*.csv")
all.data <- lapply(plan_rule_list, read.csv, header = TRUE)
plan_rule_folder <- "D:/Users/CWang/Documents/GitHub/CRR-Pension-Model-Data/API/"
plan_rule_list <- list.files(path = ./plan_rule_folder/, pattern = "*.csv")
plan_rule_list <- list.files(path = .plan_rule_folder/, pattern = "*.csv")
plan_rule_list <- list.files(path = .plan_rule_folder, pattern = "*.csv")
plan_rule_list <- list.files(path = "./API/", pattern = "*.csv")
all.data <- lapply(plan_rule_list, read.csv, header = TRUE)
wd
wd()
plan_rule_list <- list.files(path = "./API/", pattern = "*.csv")
plan_rule_list
plan_rule_list <- list.files(path = "./API/", pattern = "*.csv", full = TRUE)
all.data <- lapply(plan_rule_list, read.csv, header = TRUE)
View(all.data)
View(all.data)
View(all.data)
for (i in 1:length(plan_rule_list)){
assign(file_list[i],
read.csv(paste(plan_rule_list[i], sep=''))
)}
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(plan_rule_list[i], sep=''))
)}
plan_rule_list
folder <- "./API/"
plan_rule_list <- list.files(path = folder, pattern = "*.csv", full = TRUE)
plan_rule_list
plan_rule_list <- list.files(path = folder, pattern = "*.csv")
plan_rule_list
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(folder, plan_rule_list[i], sep=''))
)}
View(PensionIncomeStatement.csv)
View(PensionIncomeStatement.csv)
View(PensionIncomeStatement.csv)
plan_rule_list[1]
View(PensionTierBasics.csv)
pension_rules <- list()
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(folder, plan_rule_list[i], sep=''))
)}
pension_rules <- list(
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i],
read.csv(paste(folder, plan_rule_list[i], sep=''))
)}
)
pension_rules
