library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(stringr)
occ2010 <- read.csv("D:\Users\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\Documents\\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\Users\CWang\Documents\data\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\occupation_code\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", colname = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  FALSE)
as.vector(occ2010)
occ2010 <- as.vector(occ2010)
occ <- as.vector(occ2010)
View(occ)
occ <- as.vector(occ2010$V1)
?sequence()
?seq()
num1 <- seq(1, length(veryshort), 3)
veryshort <- subset(occ[1,54])
is.vector(occ)
veryshort <- subset(occ[1,54])
veryshort <- occ[1,54]
veryshort <- occ[1:54]
num1 <- seq(1, length(veryshort), 3)
veryshort <- occ[1:54]
short <- occ[55:167]
long <- occ[168:length(occ)]
num1 <- veryshort[seq(1, length(veryshort), 3)]
name1 <- veryshort[seq(2, length(veryshort), 3)]
newlong <- subset(long, stri_length(long) > 3)
newshort <- subset(short, stri_length(short) > 2)
newshort <- subset(short, str_length(short) > 2)
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
name2 <- newvar[seq(2, length(newvar), 2)]
num2 <- as.numeric(newvar[seq(1, length(newvar), 2)])
num1 <- as.numeric(veryshort[seq(1, length(veryshort), 3)])
num1
num2
newshort
newlong
name2
short <- occ[55:167]
long <- occ[168:length(occ)]
newshort <- subset(short, str_length(short) > 2)
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
print(newvar)
occ2010[ which( ! occ2010$V1 %in% "IndOccDD" )]
occ2010[ which( ! occ2010$V1 %in% "IndOccDD" )]
View(occ2010)
occ2010[ which( ! occ2010$V1 %in% "IndOccDD" ),]
occ2010 <- occ2010[ which( ! occ2010$V1 %in% "IndOccDD" ),]
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  FALSE)
occ2010 <- occ2010[ which( ! occ2010$V1 %in% "IndOccDD" ),]
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occ_2010.csv", header =  FALSE)
grepl("IndOcc", occ)
occ <- as.vector(occ2010$V1)
occ <- occ[!grepl("IndOcc", occ)]
veryshort <- occ[1:54]
num1 <- as.numeric(veryshort[seq(1, length(veryshort), 3)])
name1 <- veryshort[seq(2, length(veryshort), 3)]
num1
name1
short <- occ[55:167]
long <- occ[168:length(occ)]
newshort <- subset(short, str_length(short) > 2)
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
name2 <- newvar[seq(2, length(newvar), 2)]
num2 <- as.numeric(newvar[seq(1, length(newvar), 2)])
num2
name2
num <- c(num1, num2)
name <- c(name1, name2)
number2010 <- c(num1, num2)
name2010 <- c(name1, name2)
is.numeric(number2010)
is.string(name2010)
occlibrary <- data.frame(number2010, name2010)
View(occlibrary)
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv")
?write.csv
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv", rownames = FALSE)
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv", row.names = FALSE)
occ2010 <- read.csv("D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\raw_occ_2010.csv", header =  FALSE)
occ <- as.vector(occ2010$V1)
occ <- occ[!grepl("IndOcc", occ)]
veryshort <- occ[1:54]
num1 <- as.numeric(veryshort[seq(1, length(veryshort), 3)])
name1 <- veryshort[seq(2, length(veryshort), 3)]
short <- occ[55:167]
newshort <- subset(short, str_length(short) > 2)
long <- occ[168:length(occ)]
newlong <- subset(long, str_length(long) > 3)
newvar <- c(newshort, newlong)
name2 <- newvar[seq(2, length(newvar), 2)]
num2 <- as.numeric(newvar[seq(1, length(newvar), 2)])
number2010 <- c(num1, num2)
name2010 <- c(name1, name2)
occlibrary <- data.frame(number2010, name2010)
write.csv(occlibrary, "D:\\Users\\CWang\\Documents\\data\\r_bites\\occupation_code\\occlibrary2010.csv", row.names = FALSE)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyr)
install.packages("cellranger")
library(tidyverse)
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
# installing/loading the package:
if(!require(installr)) {
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
install.packages("installr"); require(installr)} #load / install+load installr
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
install.packages("installr")
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
source('~/GitHub/review_crr_pension_data/load.R', echo=TRUE)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse", dependencies=TRUE)
library(tidyverse)
install.packages("DBI", dependencies=TRUE)
require(DBI)
library(tidyverse)
install.packages("tidyverse")
setwd("D:/Users/CWang/Documents/GitHub/review_crr_pension_data/API/")
data2 <- lapply(dir(pattern = "*.csv"), function(i){
read.csv(i, as.is = TRUE)
})
plan_rule_list <- dir(path = ".", pattern = "*.csv")
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i], data[[i]])
}
setwd("D:/Users/CWang/Documents/GitHub/review_crr_pension_data/API/")
data <- lapply(dir(pattern = "*.csv"), function(i){
read.csv(i, as.is = TRUE)
})
plan_rule_list <- dir(path = ".", pattern = "*.csv")
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i], data[[i]])
}
View(PensionPlanBasics.csv)
View(data)
summary(data[20])
target_plans <- c(10, 9, 83, 26, 108, 78, 125, 85, 88, 80, 28, 115, 91, 111,
92, 43, 34, 48, 49, 109, 110, 53, 64, 32, 6, 119, 71, 38,
84, 69, 112, 135, 73, 93, 72, 100, 51, 59, 105, 50, 107,
79, 14, 2, 58, 98, 140, 56, 42, 45, 35, 17, 33, 8, 39, 29,
90, 74, 31, 139, 36, 15, 87, 27, 86, 46, 47, 57, 142, 75,
44, 101, 104, 54, 11, 16, 1, 122, 97, 141, 117)
target plan [1]
target_plans[1]
#look for plans that are non-agent
goal_plans <- subset.data.frame(PensionPlanBasics.csv, ppd_id %in% target_plans)
target_plans <- c(10, 9, 83, 26, 108, 78, 125, 85, 88, 80, 28, 115, 91, 111,
92, 43, 34, 48, 49, 110, 53, 64, 6, 119, 71, 38,
84, 69, 112, 135, 73, 93, 72, 100, 51, 59, 105, 50,
79, 14, 2, 58, 98, 140, 56, 42, 45, 35, 17, 33, 8, 39, 29,
90, 74, 31, 139, 36, 15, 87, 27, 86, 47, 57, 142, 75,
44, 101, 54, 11, 16, 1, 122, 97, 141, 117)
#agent multiply employer plans excluded: 32, 46, 104, 107, 109
#look for plans that are non-agent
goal_plans <- subset.data.frame(PensionPlanBasics.csv,
ppd_id %in% target_plans)
#look for plans that are non-agent
goal_plans <- subset.data.frame(PensionPlanBasics.csv$ppd_id%in% target_plans)
goal_plans <- subset.data.frame(PensionPlanBasics.csv$ppd_id %in% target_plans)
#look for plans that are non-agent
goal_plans <- subset.data.frame(PensionPlanBasics.csv$
ppd_id %in% target_plans)
#look for plans that are non-agent
goal_plans <- subset.data.frame(PensionPlanBasics.csv
ppd_id %in% target_plans)
#look for plans that are non-agent
goal_plans <- subset.data.frame(PensionPlanBasics.csv,
ppd_id %in% target_plans)
View(PensionPlanBasics.csv)
View(data)
View(data)
View(PensionEEGroupBasics.csv)
plan_rule_list <- dir(path = ".", pattern = "*.csv")
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i], data[[i]]$ppd_id %in% target_plans)
}
plan_rule_list <- dir(path = ".", pattern = "*.csv")
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i], subset(data[[i]], ppd_id %in% target_plans))
}
plan_rule_list <- dir(path = ".", pattern = "*.csv")
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i], subset(data[[i]], ppd_id %in% target_plans))
}
setwd("D:/Users/CWang/Documents/GitHub/review_crr_pension_data/API/")
data <- lapply(dir(pattern = "*.csv"), function(i){
read.csv(i, as.is = TRUE)
})
plan_rule_list <- dir(path = ".", pattern = "*.csv")
for (i in 1:length(plan_rule_list)){
assign(plan_rule_list[i], subset(data[[i]], ppd_id %in% target_plans))
}
View(PensionEEGroupBasics.csv)
View(data)
View(PensionEEGroupBasics.csv)
